[
{
	"uri": "/background/",
	"title": "Background",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/",
	"title": "AWS Modules",
	"tags": [],
	"description": "",
	"content": "Chapter 1 AWS Modules Write your documentation about AWS modules here\n"
},
{
	"uri": "/environments/",
	"title": "Accounts",
	"tags": [],
	"description": "",
	"content": "Accounts Write some documentation about AWS accounts here\n"
},
{
	"uri": "/template/",
	"title": "&lt;Title of your content, e.g. SCP&gt;",
	"tags": [],
	"description": "",
	"content": "The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nWhat is your heading for part 1 Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt;\rInstall the theme Install the Hugo-theme-learn theme by following this documentation\nThis theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo\r theme = \u0026#34;hugo-theme-learn\u0026#34;\r# For search functionality\r [outputs]\rhome = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;]\rCreate your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1\r# Basics\rDiscover what this Hugo theme is all about and the core concepts behind it.\rrenders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md\rBy opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md\rhugo new basics/second-content/_index.md\rFeel free to edit thoses files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve\rGo to http://localhost:1313\nYou should notice three things:\n You have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat!  Build the website When your site is ready to deploy, run the following command:\nhugo\rA public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n\r"
},
{
	"uri": "/background/aws-landing-zone/",
	"title": "AWS Landing Zone",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/deployments/",
	"title": "Deployments",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/log-archives/",
	"title": "Log Archives",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/master/",
	"title": "Master",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/policy-staging/",
	"title": "Policy Staging",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/vpc-baseline/",
	"title": "Vpc Baseline",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/security-hub/",
	"title": "Security Hub",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/s3/",
	"title": "S3",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/organization/",
	"title": "Organization",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/guardduty/",
	"title": "Guardduty",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/config/",
	"title": "Config",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/cloudwatch/",
	"title": "Cloudwatch",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/billing-alert/",
	"title": "Billing Alert",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/account-creation/",
	"title": "Account Creation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/security/",
	"title": "Security",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/environments/sandpit/",
	"title": "Sandpit",
	"tags": [],
	"description": "",
	"content": "This is the Sandpit account\n"
},
{
	"uri": "/aws-modules/cloudtrail/",
	"title": "CloudTrail",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/aws-modules/scp/",
	"title": "Service Control Policies",
	"tags": [],
	"description": "",
	"content": "Service control policies (SCPs) are one type of policy that you can use to manage your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization, allowing you to ensure your accounts stay within your organization\u0026rsquo;s access control guidelines.\n"
},
{
	"uri": "/",
	"title": "DMW AWS platform",
	"tags": [],
	"description": "",
	"content": "This is the documentation for the DMW Group AWS Platform This is currently testing only\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]